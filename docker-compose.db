version: '3.8'

services:
  authdb:
    container_name: postgres-prod
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /authdb/data/postgres
      POSTGRES_DB: taccaseauth
    volumes:
      - authdb_data:/var/docker/taccaseauth
      - ./db_init:/docker-entrypoint-initdb.d
    ports:
      - "6432:5432"
    networks:
      - backend
#    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 10s
      timeout: 3s
      retries: 3
    profiles:
      - production

  authdb-dev:
    container_name: postgres-dev
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /authdb-dev/data/postgres
      POSTGRES_DB: taccaseauth
    volumes:
      - /dev/null:/var/docker/data/taccaseauth_dev
      - ./db_init:/docker-entrypoint-initdb.d
    ports:
      - "6433:5432"  # Different port for dev to avoid conflicts
    networks:
      - backend
#    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 10s
      timeout: 3s
      retries: 3
    profiles:
      - development

networks:
  backend:
    driver: bridge

volumes:
  authdb_data:

